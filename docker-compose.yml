services:
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
      args:
        JAR_FILE: build/libs/auth-service-0.0.1-SNAPSHOT.jar
    ports:
      - 9090:9090
    environment:
      GRPC_PORT: 9090
      DATASOURCE_URL: jdbc:postgresql://postgres:5432/catsharing
      REDIS_HOST: redis
      KAFKA_URL: kafka:9092
    depends_on:
      postgres:
        condition: service_started
      kafka:
        condition: service_started
      zookeeper:
        condition: service_started
  mail-service:
    build:
      context: ./mail-service
      dockerfile: Dockerfile
      args:
        JAR_FILE: build/libs/mail-service-0.0.1-SNAPSHOT.jar
    environment:
      DATASOURCE_URL: jdbc:postgresql://postgres:5432/catsharing
      REDIS_HOST: redis
      KAFKA_URL: kafka:9092
    depends_on:
      postgres:
        condition: service_started
      kafka:
        condition: service_started
      zookeeper:
        condition: service_started
  cat-service:
    build:
      context: ./cat-service
      dockerfile: Dockerfile
      args:
        JAR_FILE: build/libs/cat-service-0.0.1-SNAPSHOT.jar
    ports:
      - 9091:9091
    environment:
      DATASOURCE_URL: jdbc:postgresql://postgres:5432/catsharing
      REDIS_HOST: redis
      KAFKA_URL: kafka:9092
    depends_on:
      postgres:
        condition: service_started
      kafka:
        condition: service_started
      zookeeper:
        condition: service_started
  payment-service:
    build:
      context: ./payment-service
      dockerfile: Dockerfile
      args:
        JAR_FILE: build/libs/payment-service-0.0.1-SNAPSHOT.jar
    ports:
      - 9093:9093
    environment:
      GRPC_PORT: 9093
      DATASOURCE_URL: jdbc:postgresql://postgres:5432/catsharing
      REDIS_HOST: redis
      KAFKA_URL: kafka:9092
      USER_SERVICE_URL: auth-service:9090
      TRANSACTION_SERVICE_URL: transaction-service:9094
    depends_on:
      postgres:
        condition: service_started
      kafka:
        condition: service_started
      zookeeper:
        condition: service_started
  trade-service:
    build:
      context: ./trade-service
      dockerfile: Dockerfile
      args:
        JAR_FILE: build/libs/trade-service-0.0.1-SNAPSHOT.jar
    ports:
      - 9095:9095
    environment:
      GRPC_PORT: 9095
      DATASOURCE_URL: jdbc:postgresql://postgres:5432/catsharing
      REDIS_HOST: redis
      KAFKA_URL: kafka:9092
      CAT_SERVICE_URL: cat-service:9091
      PAYMENT_SERVICE_URL: payment-service:9093
    depends_on:
      postgres:
        condition: service_started
      kafka:
        condition: service_started
      zookeeper:
        condition: service_started
  transaction-service:
    build:
      context: ./transaction-service
      dockerfile: Dockerfile
      args:
        JAR_FILE: build/libs/transaction-service-0.0.1-SNAPSHOT.jar
    ports:
      - 9094:9094
    environment:
      GRPC_PORT: 9094
      DATASOURCE_URL: jdbc:postgresql://postgres:5432/catsharing
      REDIS_HOST: redis
      KAFKA_URL: kafka:9092
      PAYMENT_SERVICE_URL: payment-service:9093
    depends_on:
      postgres:
        condition: service_started
      kafka:
        condition: service_started
      zookeeper:
        condition: service_started
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: "catsharing"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    ports:
      - "1001:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-U", "postgres", "-d", "catsharing" ]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: redis
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - cache:/data

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: SASL_PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: SASL_PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/kafka_server_jaas.conf"
      KAFKA_INTER_BROKER_LISTENER_NAME: SASL_PLAINTEXT
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_ADVERTISED_HOST_NAME: localhost
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./kafka_server_jaas.conf:/etc/kafka/kafka_server_jaas.conf
    links:
      - zookeeper

volumes:
  cache:
    driver: local