spring:
  application:
    name: mail-service
  mail:
    host: ${MAIL_HOST:smtp.mail.ru}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME:security@catsharing.ru}
    password: ${MAIL_PASSWORD:iuyqkyq19YqNyXtrW3mv}
    transport:
      protocol: smtp
    properties:
      mail:
        smtp:
          ssl:
            trust: ${MAIL_HOST:smtp.mail.ru}
          auth: true
          starttls:
            enable: true
  kafka:
    bootstrap-servers:
      - ${KAFKA_URL:localhost:9092}
    # consumer:
    #   auto-offset-reset: earliest
    #   key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    #   value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    #   properties:
    #     spring:
    #       json:
    #         type:
    #           mapping: verificationCode:ru.xplago.mailservice.models.VerificationCodeKafkaModel
    #         trusted.packages: ru.xplago
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring:
          json:
            add:
              type:
                headers: false
            type:
              mapping: verificationCode:ru.xplago.mailservice.models.VerificationCodeKafkaModel
            trusted.packages: ru.xplago
    jaas:
      enabled: true
    properties:
      security:
        protocol: SASL_PLAINTEXT
      sasl:
        mechanism: PLAIN
        jaas:
          config: org.apache.kafka.common.security.plain.PlainLoginModule required username="${KAFKA_USERNAME:admin}" password="${KAFKA_PASSWORD:admin-secret}";
    streams:
      properties:
        default.key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
        default.value.serde: org.springframework.kafka.support.serializer.JsonSerde
        spring.json.trusted.packages: ru.xplago.common.kafka.models
        spring.json.add.type.headers: false